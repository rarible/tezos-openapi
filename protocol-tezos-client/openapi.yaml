openapi: 3.0.3
info:
  title: Tezos Rarible API
  version: "0.1"
paths:
  /v0.1/nft/activities/search:
    description: Search activities with some filter
    post:
      tags:
        - nft-activity-controller
      description: Search activities with some filter
      operationId: getNftActivities
      parameters:
        - name: sort
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ActivitySort'
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NftActivityFilter'
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftActivities'
      security: [ ]
  /v0.1/ownerships/{ownershipId}:
    description: Get NFT ownerships by id
    get:
      tags:
        - nft-ownership-controller
      description: Get NFT ownerships by id
      operationId: getNftOwnershipById
      parameters:
        - name: ownershipId
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFound'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftOwnership'
      security: [ ]
  /v0.1/ownerships/byItem:
    description: Get NFT ownerships by item
    get:
      tags:
        - nft-ownership-controller
      description: Get NFT ownerships by item
      operationId: getNftOwnershipByItem
      parameters:
        - name: contract
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: tokenId
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/BigInteger'
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftOwnerships'
      security: [ ]
  /v0.1/ownerships/all:
    description: Get NFT all ownerships
    get:
      tags:
        - nft-ownership-controller
      description: Get NFT all ownerships
      operationId: getNftAllOwnerships
      parameters:
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftOwnerships'
      security: [ ]
  /v0.1/items/{itemId}/reset:
    description: Deletes the NFT item meta by identifier
    delete:
      tags:
        - nft-item-controller
      description: Deletes the NFT item meta by identifier
      operationId: resetNftItemMetaById
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
      security: [ ]
  /v0.1/items/{itemId}/meta:
    description: Get NFT item by meta id
    get:
      tags:
        - nft-item-controller
      description: Get NFT item by meta id
      operationId: getNftItemMetaById
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItemMeta'
      security: [ ]
  /v0.1/items/{itemId}:
    description: Get NFT item by id
    get:
      tags:
        - nft-item-controller
      description: Get NFT item by id
      operationId: getNftItemById
      parameters:
        - name: includeMeta
          in: query
          required: false
          schema:
            type: boolean
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFound'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItem'
      security: [ ]
  /v0.1/items/{itemId}/royalties:
    description: Get NFT item royalties
    get:
      tags:
        - nft-item-controller
      description: Get NFT item royalties
      operationId: getNftItemRoyalties
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFound'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItemRoyalties'
      security: [ ]
  /v0.1/items/byOwner:
    description: Get NFT items by owner
    get:
      tags:
        - nft-item-controller
      description: Get NFT items by owner
      operationId: getNftItemsByOwner
      parameters:
        - name: owner
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: includeMeta
          in: query
          required: false
          schema:
            type: boolean
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItems'
      security: [ ]
  /v0.1/items/byCreator:
    description: Get NFT items by creator
    get:
      tags:
        - nft-item-controller
      description: Get NFT items by creator
      operationId: getNftItemsByCreator
      parameters:
        - name: creator
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: includeMeta
          in: query
          required: false
          schema:
            type: boolean
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItems'
      security: [ ]
  /v0.1/items/byCollection:
    description: Get NFT items by collection
    get:
      tags:
        - nft-item-controller
      description: Get NFT items by collection
      operationId: getNftItemsByCollection
      parameters:
        - name: collection
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: includeMeta
          in: query
          required: false
          schema:
            type: boolean
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItems'
      security: [ ]
  /v0.1/items/all:
    description: Returns all NFT items
    get:
      tags:
        - nft-item-controller
      description: Returns all NFT items
      operationId: getNftAllItems
      parameters:
        - name: lastUpdateFrom
          in: query
          required: false
          schema:
            type: string
        - name: lastUpdateTo
          in: query
          required: false
          schema:
            type: string
        - name: showDeleted
          in: query
          required: false
          schema:
            type: boolean
        - name: includeMeta
          in: query
          required: false
          schema:
            type: boolean
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItems'
      security: [ ]
  /v0.1/collections/{collection}/generate_token_id:
    description: collections_generate_id
    get:
      tags:
        - nft-collection-controller
      description: collections_generate_id
      operationId: generateNftTokenId
      parameters:
        - name: collection
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftTokenId'
      security: [ ]
  /v0.1/collections/{collection}:
    description: collections_by_id
    get:
      tags:
        - nft-collection-controller
      description: collections_by_id
      operationId: getNftCollectionById
      parameters:
        - name: collection
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFound'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftCollection'
      security: [ ]
  /v0.1/collections/byOwner:
    description: collections_by_owner
    get:
      tags:
        - nft-collection-controller
      description: collections_by_owner
      operationId: searchNftCollectionsByOwner
      parameters:
        - name: owner
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftCollections'
      security: [ ]
  /v0.1/collections/all:
    description: collections_all
    get:
      tags:
        - nft-collection-controller
      description: collections_all
      operationId: searchNftAllCollections
      parameters:
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftCollections'
      security: [ ]
  /v0.1/orders:
    description: Create or update an order
    post:
      tags:
        - order-controller
      description: Create or update an order
      operationId: upsertOrder
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderForm'
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderError'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      security: [ ]
  /v0.1/orders/all:
    description: Get all orders
    get:
      tags:
        - order-controller
      description: Get all orders
      operationId: getOrdersAll
      parameters:
        - name: origin
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: sort
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ActivitySort'
        - name: status
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrderStatus'
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagination'
      security: [ ]
  /v0.1/orders/{hash}:
    description: Get order by hash
    get:
      tags:
        - order-controller
      description: Get order by hash
      operationId: getOrderByHash
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFound'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      security: [ ]
  /v0.1/orders/byIds:
    description: Get order by ids
    post:
      tags:
        - order-controller
      description: Get order by ids
      operationId: getOrderByIds
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderIds'
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
      security: [ ]
  /v0.1/orders/sell/byMaker:
    description: Get sell order by maker
    get:
      tags:
        - order-controller
      description: Get sell order by maker
      operationId: getSellOrdersByMaker
      parameters:
        - name: maker
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: origin
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagination'
      security: [ ]
  /v0.1/orders/sell/byItem:
    description: Get sell order by item
    get:
      tags:
        - order-controller
      description: Get sell order by item
      operationId: getSellOrderByItem
      parameters:
        - name: contract
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: tokenId
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/BigInteger'
        - name: maker
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: origin
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: currencyId
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrderStatus'
        - name: startDate
          in: query
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
            maximum: 9007199254740992
        - name: endDate
          in: query
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
            maximum: 9007199254740992
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagination'
      security: [ ]
  /v0.1/orders/sell/byCollection:
    description: Get sell orders by collection
    get:
      tags:
        - order-controller
      description: Get sell orders by collection
      operationId: getSellOrdersByCollection
      parameters:
        - name: collection
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: origin
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagination'
      security: [ ]
  /v0.1/orders/sell:
    description: Get sell orders
    get:
      tags:
        - order-controller
      description: Get sell orders
      operationId: getSellOrders
      parameters:
        - name: origin
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagination'
      security: [ ]
  /v0.1/orders/bids/byMaker:
    description: Get order bids by maker
    get:
      tags:
        - order-controller
      description: Get order bids by maker
      operationId: getOrderBidsByMaker
      parameters:
        - name: maker
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: origin
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagination'
      security: [ ]
  /v0.1/orders/bids/byItem:
    description: Get order bids by item
    get:
      tags:
        - order-controller
      description: Get order bids by item
      operationId: getOrderBidsByItem
      parameters:
        - name: contract
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: tokenId
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/BigInteger'
        - name: maker
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: origin
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: currencyId
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrderStatus'
        - name: startDate
          in: query
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
            maximum: 9007199254740992
        - name: endDate
          in: query
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
            maximum: 9007199254740992
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagination'
      security: [ ]
  /v0.1/order/orders/currencies/byBidOrdersOfItem:
    description: Returns currencies made as payment in all bid orders of the item
    get:
      tags:
        - order-controller
      description: Returns currencies made as payment in all bid orders of the item
      operationId: getCurrenciesByBidOrdersOfItem
      parameters:
        - name: contract
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: tokenId
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/BigInteger'
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCurrencies'
      security: [ ]
  /v0.1/order/orders/currencies/bySellOrdersOfItem:
    description: Returns currencies taken as payment in all sell orders of the item
    get:
      tags:
        - order-controller
      description: Returns currencies taken as payment in all sell orders of the item
      operationId: getCurrenciesBySellOrdersOfItem
      parameters:
        - name: contract
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Address'
        - name: tokenId
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/BigInteger'
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCurrencies'
      security: [ ]
  /v0.1/order/activities/search:
    description: get Order activities with some filter
    post:
      tags:
        - order-activity-controller
      description: get Order activities with some filter
      operationId: getOrderActivities
      parameters:
        - name: sort
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ActivitySort'
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 9007199254740992
        - name: continuation
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderActivityFilter'
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderActivities'
      security: [ ]
  /v0.1/order/signature/validate:
    description: Validate a message
    post:
      tags:
        - order-signature-controller
      description: Validate a message
      operationId: validate
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureValidationForm'
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security: [ ]
  /v0.1/balances/{contract}/{owner}:
    summary: ft_balance
    get:
      tags:
        - ft-balance-controller
      summary: ft_balance
      operationId: ft_balance
      parameters:
        - name: tokenId
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/BigInteger'
        - name: contract
          in: path
          required: true
          schema:
            type: string
        - name: owner
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFound'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FTBalance'
      security: [ ]
  /kafka/item:
    summary: kafka_item
    get:
      tags:
        - kafka-controller
      summary: kafka_item
      operationId: kafka_item
      parameters: [ ]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItemEvent'
      security: [ ]
  /kafka/order:
    summary: kafka_order
    get:
      tags:
        - kafka-controller
      summary: kafka_order
      operationId: kafka_order
      parameters: [ ]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderEvent'
      security: [ ]
  /kafka/ownership:
    summary: kafka_ownership
    get:
      tags:
        - kafka-controller
      summary: kafka_ownership
      operationId: kafka_ownership
      parameters: [ ]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftOwnershipEvent'
      security: [ ]
  /kafka/activity:
    summary: kafka_activity
    get:
      tags:
        - kafka-controller
      summary: kafka_activity
      operationId: kafka_activity
      parameters: [ ]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityType'
      security: [ ]
  /kafka/collection:
    summary: kafka_collection
    get:
      tags:
        - kafka-controller
      summary: kafka_collection
      operationId: kafka_collection
      parameters: [ ]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftCollectionEvent'
      security: [ ]
